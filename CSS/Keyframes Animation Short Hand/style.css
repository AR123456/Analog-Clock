/*// BASE STYLES //*/

html,
body {
  height: 100%;
  width: 100%;
  overflow: hidden;
  margin: 0;
}

.grass,
.sky,
.road {
  position: relative;
}

.sky {
  height: 40%;
  background: skyblue;
}

.grass {
  height: 30%;
  background: seagreen;
}

.road {
  height: 30%;
  background: dimgrey;
  box-sizing: border-box;
  border-top: 10px solid grey;
  border-bottom: 10px solid grey;
  width: 100%;
}

.lines {
  box-sizing: border-box;
  border: 5px dashed #fff;
  height: 0px;
  width: 100%;
  position: absolute;
  top: 45%;
}
/* keyframes  */
/* use a diffrent keyframe block for every type of animation we use on the page
apply that keyfram animation to different elements on the web page  */
/* The @keyframes CSS at-rule controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence. This gives more control over the intermediate steps of the animation sequence than transitions. */

/* elements to animate  */
.mario {
  position: absolute;
  top: -40px;
  left: 0px;
  animation-name: drive;
  animation-duration: 3s;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
  animation-timing-function: cubic-bezier(0, 0.77, 1, 0.28);
  /* short hand */
}

.luigi {
  position: absolute;
  top: 100px;
  left: 0;
  animation: drive;
  animation-duration: 5s;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
  /* animation-direction: reverse; */
}
/* animation short hand can be on all one line  */
.cloud {
  position: absolute;
}
/* distant cloud */
.cloud:nth-child(1) {
  width: 200px;
  top: 120px;
  opacity: 0.5;
  animation: drive 50s ease-out infinite both;
}
/* front most cloud */
.cloud:nth-child(2) {
  width: 300px;
  top: 0;
  animation: drive 30s ease-out infinite both reverse;
}
/* keyframes  */

@keyframes drive {
  from {
    transform: translateX(-200px);
  }
  to {
    transform: translateX(1600px);
  }
}
@keyframes wind {
  from {
    /* transform: translateX(-200px); */
    /* can use left instead  */
    left: -300;
  }
  to {
    /* transform: translateX(1600px); */
    left: 100%;
  }
}
